{"version":3,"sources":["webpack://bucador-recetas/./src/js/http-provider.js","webpack://bucador-recetas/./src/js/searchResults.js","webpack://bucador-recetas/./src/js/events.js","webpack://bucador-recetas/./src/index.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA,wGAAwG,YAAY,UAAU,IAAI,WAAW,KAAK;AAClJ;AACA;;;AAGO;AACP;AACA;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;AC9CA;AAC4D;;AAE5D;AACA;AACA;AACO,gBAAgB,kDAAE;;AAEzB;AACO;AACP,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,SAAS,4BAA4B,mBAAmB;AACpF;AACA;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA;AACA,+CAA+C,wEAAwE;AACvH;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEO;AACP,IAAI,WAAW;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,SAAS,4BAA4B,mBAAmB;AACpF;AACA;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA;AACA,+CAA+C,wEAAwE;AACvH;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,C;;ACrHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA,C;;AChDA;AACwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACuD;AAC2B;;AAElF;AACA,WAAW;AACX,SAAS;AACT,UAAU;AACV,OAAO;AACP,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,kBAAkB,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO;AACjG;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,QAAQ,OAAO,kBAAkB,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO;AAC7F;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA,IAAI,QAAQ;AACZ,CAAC,C","file":"448b1a0ff46b7a8e59db.bundle.js","sourcesContent":["//API\r\n\"&health=alcohol-free&cuisineType=Nordic&mealType=Dinner&dishType=Side%20dish&imageSize=SMALL\"\r\nconst httpProvider = (_ingredient, _id, _key) => `https://api.edamam.com/api/recipes/v2?type=public&q=${_ingredient}&app_id=${_id}&app_key=${_key}`;\r\nconst apiID = \"78340058\";\r\nconst apiKey = \"78c40de5ea0d2fabd55e3a111d673262\";\r\n\r\n\r\nexport const getRecipeAPI = async(_ingredient,_diet, _health, _cuisine, _meal, _dish, _arrayURL) => {\r\n    try {\r\n        let filteredHttp = httpProvider(_ingredient.value, apiID,apiKey);\r\n        if (_diet !== \"\"){\r\n            filteredHttp += `&diet=${_diet}`;\r\n        }\r\n        if(_health !== \"\"){\r\n            filteredHttp += `&health=${_health}`;\r\n        }\r\n        if (_cuisine !== \"\"){\r\n            filteredHttp += `cuisineType=${_cuisine}`;\r\n        }\r\n        if (_meal !== \"\"){\r\n            filteredHttp += `&mealType=${_meal}`\r\n        }\r\n        if(_dish){\r\n            filteredHttp += `&dishType=${_dish}`\r\n        }\r\n        _arrayURL.splice(0, _arrayURL.length);\r\n        _arrayURL = filteredHttp;\r\n        const resp = await fetch(filteredHttp);\r\n        if(!resp.ok) throw \"Conection error\";\r\n        const data = await resp.json();\r\n        console.log(data);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const nextPageAPI = async(_url) =>{\r\n    try {\r\n        let resp = await fetch(_url);\r\n        if(!resp.ok) throw \"Conection error\";\r\n        let data = await resp.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","//Importar\r\nimport { getRecipeAPI, nextPageAPI } from \"./http-provider\";\r\n\r\n//Variables\r\nconst results = document.getElementById(\"_results\");\r\nlet nextPageURL = \"\";\r\nexport let arrayURLs = [];\r\n\r\n//Funcion\r\nexport const callAPI = (_ingredient, _diet, _health, _cuisine, _meal, _dish, _arrayRecipes) =>{\r\n    getRecipeAPI(_ingredient, _diet, _health, _cuisine, _meal, _dish, _arrayPages).then(resp => {\r\n        results.innerHTML = \"\";\r\n        _arrayRecipes = [];\r\n        if(Object.keys(resp._links).length !== 0) {\r\n            console.log(\"Hay url\", (resp._links).length)\r\n            nextPageURL = resp._links.next.href;\r\n            let iter = 0;\r\n            fillArrayURL(iter, _arrayPages); //atun 4 paginas\r\n        }\r\n        console.log(_arrayPages);\r\n        resp.hits.forEach(element => {\r\n            _arrayRecipes.push(element[\"recipe\"]);\r\n        });\r\n        _arrayRecipes.forEach(el =>{\r\n            results.innerHTML += `<div class=\"card flex-row flex-wrap\">\r\n            <div class=\"card-header p-0 border-0 thumbs d-flex align-content-center justify-content-center\">\r\n                <img src=\"${el.image}\" alt=\"\" style=\"width: 7rem; object-fit: cover;\">\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <h5 class=\"card-title ml-4\">${!el.label?\"\":el.label}</h5>\r\n                </div>\r\n                <div class=\"row ml-2\">\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.mealType?\"\":el.mealType}</p>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.dishType?\"\":el.dishType}</p>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.cuisineType?\"\":el.cuisineType}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${!el.cautions?\"\":el.cautions}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${!el.dietLabels?\"\":el.dietLabels}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${isNaN(parseInt(el.calories/el.yield))?\"\":parseInt(el.calories/el.yield)} kcal/person</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer w-100 text-muted p-1 d-flex justify-content-end\">\r\n                <a href=\"${el.url}\" target=\"_blank\" class=\"btn btn-primary\">LINK</a>\r\n            </div>\r\n        </div>\r\n        <br>`;\r\n        });\r\n    });\r\n}\r\n\r\nconst fillArrayURL = (_iter ,_arrayPages) => {\r\n    while (_iter < 2){\r\n        console.log(\"Iteracion: \", iter)\r\n        nextPageAPI(nextPageURL).then(resp => {\r\n            console.log(\"Promesa: \",nextPageURL);\r\n            nextPageURL = resp._links.next.href;\r\n            _arrayPages.push(nextPageURL);\r\n            _iter++;\r\n        });\r\n    }\r\n}\r\n\r\nexport const nextPage = (_arrayRecipes, _urlArrayPages, _index) =>{\r\n    nextPageAPI(_urlArrayPages[_index]).then(resp => {\r\n        resp.hits.forEach(element => {\r\n            _arrayRecipes.push(element[\"recipe\"]);\r\n        });\r\n        results.innerHTML = \"\";\r\n        _arrayRecipes.forEach(el =>{\r\n            results.innerHTML += `<div class=\"card flex-row flex-wrap\">\r\n            <div class=\"card-header p-0 border-0 thumbs d-flex align-content-center justify-content-center\">\r\n                <img src=\"${el.image}\" alt=\"\" style=\"width: 7rem; object-fit: cover;\">\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <div class=\"row\">\r\n                    <h4 class=\"card-title ml-4\">${!el.label?\"\":el.label}</h4>\r\n                </div>\r\n                <div class=\"row ml-2\">\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.mealType?\"\":el.mealType}</p>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.dishType?\"\":el.dishType}</p>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <p class=\"card-text\">${!el.cuisineType?\"\":el.cuisineType}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${!el.cautions?\"\":el.cautions}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${!el.dietLabels?\"\":el.dietLabels}</p>\r\n                    </div>\r\n                    <div class=\"col-4 mt-3\">\r\n                        <p class=\"card-text\">${isNaN(parseInt(el.calories/el.yield))?\"\":parseInt(el.calories/el.yield)} kcal/person</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer w-100 text-muted p-1 d-flex justify-content-end\">\r\n                <a href=\"${el.url}\" target=\"_blank\" class=\"btn btn-primary\">LINK</a>\r\n            </div>\r\n        </div>\r\n        <br>`;\r\n        });\r\n    });\r\n}","//HTML\r\nconst dietDrop = document.getElementById(\"_diet\");\r\nconst healthDrop = document.getElementById(\"_health\");\r\nconst cuisineTypeDrop = document.getElementById(\"_cuisineType\");\r\nconst mealTypeDrop = document.getElementById(\"_mealType\");\r\nconst dishTypeDrop = document.getElementById(\"_dishType\");\r\n\r\n//Variables\r\nlet strDiet = \"\";\r\nlet strHealth = \"\";\r\nlet strCuisine = \"\";\r\nlet strMeal = \"\";\r\nlet strDish = \"\";\r\n\r\nexport const getDietType = () =>{\r\n    dietDrop.addEventListener(\"change\", (e) => {\r\n        strDiet = e.target.options[e.target.options.selectedIndex].value;\r\n        return strDiet;\r\n    });\r\n    return strDiet;\r\n}\r\n\r\nexport const getHealth = () =>{\r\n    healthDrop.addEventListener(\"change\", (e) =>{\r\n        strHealth = e.target.options[e.target.options.selectedIndex].value;\r\n    });\r\n    return strHealth;\r\n}\r\n\r\nexport const getCuisine = () =>{\r\n    cuisineTypeDrop.addEventListener(\"change\", (e) =>{\r\n        strCuisine = e.target.options[e.target.options.selectedIndex].value;\r\n    });\r\n    return strCuisine;\r\n}\r\n\r\nexport const getMeal = () =>{\r\n    mealTypeDrop.addEventListener(\"change\", (e) =>{\r\n        strMeal = e.target.options[e.target.options.selectedIndex].value;\r\n    });\r\n    return strMeal;\r\n}\r\n\r\nexport const getDish = () =>{\r\n    dishTypeDrop.addEventListener(\"change\", (e) =>{\r\n        strDish = e.target.options[e.target.options.selectedIndex].value;\r\n    });\r\n    return strDish;\r\n}","//Importar el CSS\r\nimport \"./css/style.css\"\r\n\r\n//HTML\r\nconst ingredientInput = document.getElementById(\"_ingred\");\r\nconst btnSearch = document.getElementById(\"_btnSearch\");\r\nconst btnNext = document.getElementById(\"_next\");\r\nconst btnPrevious = document.getElementById(\"_previous\");\r\n\r\n//Importar funciones y variables que necesitamos para que funcione la aplicación\r\nimport { callAPI, nextPage } from \"./js/searchResults\";\r\nimport { getDietType, getHealth, getCuisine, getMeal, getDish } from \"./js/events\"\r\n\r\n//Llamadas de funciones\r\ngetDietType();\r\ngetHealth();\r\ngetCuisine();\r\ngetMeal();\r\ngetDish();\r\n\r\n//Variables\r\nlet recipeArray = [];\r\nlet urlArray = [];\r\nlet index = 0;\r\n//Eventos\r\ningredientInput.addEventListener(\"keyup\", (e)=>{\r\n    if (e.key === \"Enter\"){\r\n        if (ingredientInput.value !== \"\"){\r\n            callAPI(ingredientInput, getDietType(), getHealth(), getCuisine(), getMeal(), getDish(), recipeArray, urlArray);\r\n            btnNext.parentElement.parentElement.removeAttribute(\"hidden\");\r\n        } else {\r\n            alert(\"It is mandatory to type an ingredient\");\r\n        }\r\n    }\r\n});\r\n\r\nbtnSearch.addEventListener(\"click\", () =>{\r\n    if (ingredientInput.value !== \"\"){\r\n        btnSearch.disabled = true;\r\n        callAPI(ingredientInput, getDietType(), getHealth(), getCuisine(), getMeal(), getDish(), recipeArray, urlArray)\r\n        btnSearch.disabled = false;\r\n        btnNext.parentElement.parentElement.removeAttribute(\"hidden\");\r\n    }else {\r\n        alert(\"It is mandatory to type an ingredient\");\r\n    }\r\n});\r\n\r\nbtnNext.addEventListener(\"click\", () =>{\r\n    index++;\r\n    nextPage(recipeArray, index);\r\n})"],"sourceRoot":""}